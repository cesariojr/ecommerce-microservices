{
  "info": {
    "name": "E-commerce Simple Tests",
    "description": "Simplified testing suite for authentication and RBAC in microservices",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "1. Health Checks",
      "item": [
        {
          "name": "Auth Service Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{auth_service_url}}/health"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Auth service is healthy', () => {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Product Service Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{product_service_url}}/health"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Product service is healthy', () => {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "2. Authentication",
      "item": [
        {
          "name": "Login Admin",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{admin_email}}\",\n  \"password\": \"{{admin_password}}\"\n}"
            },
            "url": "{{auth_service_url}}/auth/login"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Admin login successful', () => {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.access_token).to.exist;",
                  "    pm.environment.set('admin_token', response.access_token);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Login Viewer",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{viewer_email}}\",\n  \"password\": \"{{viewer_password}}\"\n}"
            },
            "url": "{{auth_service_url}}/auth/login"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Viewer login successful', () => {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.access_token).to.exist;",
                  "    pm.environment.set('viewer_token', response.access_token);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Login Customer",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{customer_email}}\",\n  \"password\": \"{{customer_password}}\"\n}"
            },
            "url": "{{auth_service_url}}/auth/login"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Customer login successful', () => {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.access_token).to.exist;",
                  "    pm.environment.set('customer_token', response.access_token);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Validate Admin Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"{{admin_token}}\"\n}"
            },
            "url": "{{auth_service_url}}/auth/validate"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Admin token validation successful', () => {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.valid).to.be.true;",
                  "    pm.expect(response.user).to.exist;",
                  "    pm.expect(response.user.role).to.equal('admin');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Validate Viewer Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"{{viewer_token}}\"\n}"
            },
            "url": "{{auth_service_url}}/auth/validate"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Viewer token validation successful', () => {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.valid).to.be.true;",
                  "    pm.expect(response.user).to.exist;",
                  "    pm.expect(response.user.role).to.equal('viewer');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Validate Customer Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"{{customer_token}}\"\n}"
            },
            "url": "{{auth_service_url}}/auth/validate"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Customer token validation successful', () => {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.valid).to.be.true;",
                  "    pm.expect(response.user).to.exist;",
                  "    pm.expect(response.user.role).to.equal('customer');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Login Invalid Credentials",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"invalid@email.com\",\n  \"password\": \"wrongpassword\"\n}"
            },
            "url": "{{auth_service_url}}/auth/login"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Invalid credentials rejected', () => {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "2.5. Public Access",
      "item": [
        {
          "name": "Public - List Products (No Auth)",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{product_service_url}}/products"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Products are publicly accessible', () => {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.products).to.exist;",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "3. Admin Tests",
      "item": [
        {
          "name": "Admin - List Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{product_service_url}}/products"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Admin can list products', () => {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.products).to.exist;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Admin - Create Product",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Product\",\n  \"description\": \"Product created by Postman test\",\n  \"price\": 99.99,\n  \"category\": \"Test\",\n  \"stock_quantity\": 10\n}"
            },
            "url": "{{product_service_url}}/products"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Admin can create product', () => {",
                  "    pm.response.to.have.status(201);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.product_id).to.exist;",
                  "    pm.environment.set('test_product_id', response.product_id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Admin - View Reports",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": "{{product_service_url}}/reports/sales"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Admin can view reports', () => {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.total_sales).to.exist;",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "4. Viewer Tests",
      "item": [
        {
          "name": "Viewer - List Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{product_service_url}}/products"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Viewer can list products', () => {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.products).to.exist;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Viewer - Try Create Product (Should Fail)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{viewer_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Unauthorized Product\",\n  \"price\": 50.00,\n  \"category\": \"Test\"\n}"
            },
            "url": "{{product_service_url}}/products"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Viewer cannot create product', () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Viewer - View Reports",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{viewer_token}}"
              }
            ],
            "url": "{{product_service_url}}/reports/sales"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Viewer can view reports', () => {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.total_sales).to.exist;",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "5. Customer Tests",
      "item": [
        {
          "name": "Customer - List Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{product_service_url}}/products"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Customer can list products', () => {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.products).to.exist;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Customer - View Cart",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{customer_token}}"
              }
            ],
            "url": "{{product_service_url}}/orders/cart"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Customer can view cart', () => {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Customer - Add to Cart",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{customer_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"product_id\": 1,\n  \"quantity\": 1\n}"
            },
            "url": "{{product_service_url}}/orders/cart/add"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Customer can add to cart', () => {",
                  "    pm.response.to.have.status(201);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.message).to.include('added to cart');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Customer - Try Create Product (Should Fail)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{customer_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Unauthorized Product\",\n  \"price\": 50.00,\n  \"category\": \"Test\"\n}"
            },
            "url": "{{product_service_url}}/products"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Customer cannot create product', () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Customer - Try View Reports (Should Fail)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{customer_token}}"
              }
            ],
            "url": "{{product_service_url}}/reports/sales"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Customer cannot view reports', () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "6. Security Tests",
      "item": [
        {
          "name": "No Token Test (Should Fail)",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{product_service_url}}/reports/sales"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Request without token fails', () => {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Invalid Token Test (Should Fail)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer invalid-token-123"
              }
            ],
            "url": "{{product_service_url}}/reports/sales"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Request with invalid token fails', () => {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}
